#include <stdio.h>
#include <stdlib.h>

// Function to find the maximum area of the histogram
long largestRectangle(int* h, int n) {
    int* stack = (int*)malloc(n * sizeof(int));
    int top = -1;
    long max_area = 0;
    long area_with_top;
    int i = 0;

    while (i < n) {
        if (top == -1 || h[stack[top]] <= h[i]) {
            stack[++top] = i++;
        } else {
            int tp = stack[top--];
            area_with_top = h[tp] * (top == -1 ? i : i - stack[top] - 1);
            if (max_area < area_with_top) {
                max_area = area_with_top;
            }
        }
    }

    while (top != -1) {
        int tp = stack[top--];
        area_with_top = h[tp] * (top == -1 ? i : i - stack[top] - 1);
        if (max_area < area_with_top) {
            max_area = area_with_top;
        }
    }

    free(stack);
    return max_area;
}

int main() {
    int n;
    scanf("%d", &n);

    int* h = (int*)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        scanf("%d", &h[i]);
    }

    printf("%ld\n", largestRectangle(h, n));

    free(h);
    return 0;
}
